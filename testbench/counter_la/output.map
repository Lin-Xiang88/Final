
Memory Configuration

Name             Origin             Length             Attributes
vexriscv_debug   0x00000000f00f0000 0x0000000000000100
dff              0x0000000000000000 0x0000000000000400
dff2             0x0000000000000400 0x0000000000000200
flash            0x0000000010000000 0x0000000001000000
mprj             0x0000000030000000 0x0000000000100000
mprjram          0x0000000038000000 0x0000000000000200
fir              0x0000000038000200 0x0000000000000100
matmul           0x0000000038000300 0x0000000000000100
hk               0x0000000026000000 0x0000000000100000
csr              0x00000000f0000000 0x0000000000010000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0

.text           0x0000000010000000      0x3dc
                0x0000000010000000                _ftext = .
 *crt0*(.text)
 .text          0x0000000010000000      0x1a4 counter_la.elf-crt0_vex.o
                0x0000000010000000                _start
                0x0000000010000020                trap_entry
 *crt0*(.text)
 *(.text.isr)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000100001a4       0x28 counter_la.elf-isr.o
                0x00000000100001a4                isr
 .text          0x00000000100001cc        0x0 counter_la.elf-matmul.o
 .text          0x00000000100001cc        0x0 counter_la.elf-qs.o
 .text          0x00000000100001cc       0x78 counter_la.elf-counter_la.o
                0x00000000100001cc                putchar
                0x0000000010000210                print
 .text.startup  0x0000000010000244      0x198 counter_la.elf-counter_la.o
                0x0000000010000244                main
                0x00000000100003dc                _etext = .

.rela.dyn       0x00000000100003dc        0x0
 .rela.text     0x00000000100003dc        0x0 counter_la.elf-crt0_vex.o

.rodata         0x00000000100003dc        0x4
                0x00000000100003e0                . = ALIGN (0x8)
 *fill*         0x00000000100003dc        0x4 
                0x00000000100003e0                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 *(.rodata1)
                0x00000000100003e0                . = ALIGN (0x8)
                0x00000000100003e0                _erodata = .

.data           0x0000000000000000       0x30 load address 0x00000000100003e0
                0x0000000000000000                . = ALIGN (0x8)
                0x0000000000000000                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000000        0x0 counter_la.elf-crt0_vex.o
 .data          0x0000000000000000        0x0 counter_la.elf-isr.o
 .data          0x0000000000000000        0x0 counter_la.elf-matmul.o
 .data          0x0000000000000000       0x28 counter_la.elf-qs.o
                0x0000000000000000                A
 .data          0x0000000000000028        0x0 counter_la.elf-counter_la.o
 *(.data1)
                0x0000000000000030                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x0000000000000028        0x4 counter_la.elf-matmul.o
                0x0000000000000028                inst_addr
                0x0000000000000030                . = ALIGN (0x8)
 *fill*         0x000000000000002c        0x4 
                0x0000000000000030                _edata = .

.bss            0x0000000000000030       0x48 load address 0x0000000010000410
                0x0000000000000030                . = ALIGN (0x8)
                0x0000000000000030                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x0000000000000030        0x2 counter_la.elf-isr.o
                0x0000000000000030                flag
 *fill*         0x0000000000000032        0x2 
 .sbss          0x0000000000000034        0x4 counter_la.elf-matmul.o
                0x0000000000000034                inst_ptr
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000038        0x0 counter_la.elf-crt0_vex.o
 .bss           0x0000000000000038        0x0 counter_la.elf-isr.o
 .bss           0x0000000000000038       0x40 counter_la.elf-matmul.o
                0x0000000000000038                result
 .bss           0x0000000000000078        0x0 counter_la.elf-qs.o
 .bss           0x0000000000000078        0x0 counter_la.elf-counter_la.o
 *(COMMON)
                0x0000000000000078                . = ALIGN (0x8)
                0x0000000000000078                _ebss = .
                0x0000000000000078                _end = .

.mprjram        0x0000000038000000      0x128 load address 0x0000000010000410
                0x0000000038000000                . = ALIGN (0x8)
                0x0000000038000000                _fsram = .
 .mprjram       0x0000000038000000       0x38 counter_la.elf-matmul.o
                0x0000000038000000                firPtr
 .mprjram       0x0000000038000038       0xf0 counter_la.elf-qs.o
                0x0000000038000038                partition
                0x00000000380000a8                sort
                0x0000000038000104                qsort

.fir            0x0000000038000200      0x100 load address 0x0000000010000538
                0x0000000038000200                . = ALIGN (0x8)
                0x0000000038000200                _ffir = .
 .fir           0x0000000038000200      0x100 counter_la.elf-matmul.o
                0x0000000038000200                fir_data

.matmul         0x0000000038000300       0xac load address 0x0000000010000638
                0x0000000038000300                . = ALIGN (0x8)
                0x0000000038000300                _fmatmul = .
 .matmul        0x0000000038000300       0xac counter_la.elf-matmul.o
                0x0000000038000300                fir_tap
                0x000000003800032c                AB
                0x0000000000000600                PROVIDE (_fstack = (ORIGIN (dff2) + LENGTH (dff2)))
                0x00000000100003e0                PROVIDE (_fdata_rom = LOADADDR (.data))
                [!provide]                        PROVIDE (_edata_rom = (LOADADDR (.data) + SIZEOF (.data)))
                0x0000000038000128                PROVIDE (_esram = (ORIGIN (mprjram) + SIZEOF (.mprjram)))
                0x0000000010000410                PROVIDE (_esram_rom = LOADADDR (.mprjram))
                0x0000000038000300                PROVIDE (_efir = (ORIGIN (fir) + SIZEOF (.fir)))
                0x0000000010000538                PROVIDE (_efir_rom = LOADADDR (.fir))
                0x00000000380003ac                PROVIDE (_ematmul = (ORIGIN (matmul) + SIZEOF (.matmul)))
                0x0000000010000638                PROVIDE (_ematmul_rom = LOADADDR (.matmul))
LOAD counter_la.elf-crt0_vex.o
LOAD counter_la.elf-isr.o
LOAD counter_la.elf-matmul.o
LOAD counter_la.elf-qs.o
LOAD counter_la.elf-counter_la.o
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a
OUTPUT(counter_la.elf elf32-littleriscv)

.riscv.attributes
                0x0000000000000000       0x20
 .riscv.attributes
                0x0000000000000000       0x1e counter_la.elf-crt0_vex.o
 .riscv.attributes
                0x000000000000001e       0x20 counter_la.elf-isr.o
 .riscv.attributes
                0x000000000000003e       0x1c counter_la.elf-matmul.o
 .riscv.attributes
                0x000000000000005a       0x1c counter_la.elf-qs.o
 .riscv.attributes
                0x0000000000000076       0x1c counter_la.elf-counter_la.o

.comment        0x0000000000000000       0x1b
 .comment       0x0000000000000000       0x1b counter_la.elf-isr.o
                                         0x1c (size before relaxing)
 .comment       0x000000000000001b       0x1c counter_la.elf-matmul.o
 .comment       0x000000000000001b       0x1c counter_la.elf-qs.o
 .comment       0x000000000000001b       0x1c counter_la.elf-counter_la.o

.debug_line     0x0000000000000000      0xbd6
 .debug_line    0x0000000000000000      0x270 counter_la.elf-crt0_vex.o
 .debug_line    0x0000000000000270       0xb3 counter_la.elf-isr.o
 .debug_line    0x0000000000000323       0xc8 counter_la.elf-matmul.o
 .debug_line    0x00000000000003eb      0x204 counter_la.elf-qs.o
 .debug_line    0x00000000000005ef      0x5e7 counter_la.elf-counter_la.o

.debug_line_str
                0x0000000000000000      0x10f
 .debug_line_str
                0x0000000000000000       0x59 counter_la.elf-crt0_vex.o
 .debug_line_str
                0x0000000000000059       0x62 counter_la.elf-isr.o
                                         0xfb (size before relaxing)
 .debug_line_str
                0x00000000000000bb       0x27 counter_la.elf-matmul.o
                                        0x109 (size before relaxing)
 .debug_line_str
                0x00000000000000e2       0x19 counter_la.elf-qs.o
                                         0xb0 (size before relaxing)
 .debug_line_str
                0x00000000000000fb       0x14 counter_la.elf-counter_la.o
                                         0xfe (size before relaxing)

.debug_info     0x0000000000000000      0x501
 .debug_info    0x0000000000000000       0x25 counter_la.elf-crt0_vex.o
 .debug_info    0x0000000000000025       0xdc counter_la.elf-isr.o
 .debug_info    0x0000000000000101      0x141 counter_la.elf-matmul.o
 .debug_info    0x0000000000000242      0x170 counter_la.elf-qs.o
 .debug_info    0x00000000000003b2      0x14f counter_la.elf-counter_la.o

.debug_abbrev   0x0000000000000000      0x385
 .debug_abbrev  0x0000000000000000       0x14 counter_la.elf-crt0_vex.o
 .debug_abbrev  0x0000000000000014       0xa2 counter_la.elf-isr.o
 .debug_abbrev  0x00000000000000b6       0x98 counter_la.elf-matmul.o
 .debug_abbrev  0x000000000000014e      0x126 counter_la.elf-qs.o
 .debug_abbrev  0x0000000000000274      0x111 counter_la.elf-counter_la.o

.debug_aranges  0x0000000000000000       0xb8
 .debug_aranges
                0x0000000000000000       0x20 counter_la.elf-crt0_vex.o
 .debug_aranges
                0x0000000000000020       0x20 counter_la.elf-isr.o
 .debug_aranges
                0x0000000000000040       0x20 counter_la.elf-matmul.o
 .debug_aranges
                0x0000000000000060       0x30 counter_la.elf-qs.o
 .debug_aranges
                0x0000000000000090       0x28 counter_la.elf-counter_la.o

.debug_str      0x0000000000000000      0x193
 .debug_str     0x0000000000000000       0x65 counter_la.elf-crt0_vex.o
 .debug_str     0x0000000000000065       0xce counter_la.elf-isr.o
                                        0x107 (size before relaxing)
 .debug_str     0x0000000000000133       0x32 counter_la.elf-matmul.o
                                        0x11a (size before relaxing)
 .debug_str     0x0000000000000165       0x1b counter_la.elf-qs.o
                                         0x88 (size before relaxing)
 .debug_str     0x0000000000000180       0x13 counter_la.elf-counter_la.o
                                        0x10d (size before relaxing)

.debug_loclists
                0x0000000000000000      0x15a
 .debug_loclists
                0x0000000000000000       0x19 counter_la.elf-isr.o
 .debug_loclists
                0x0000000000000019       0xed counter_la.elf-qs.o
 .debug_loclists
                0x0000000000000106       0x54 counter_la.elf-counter_la.o

.debug_frame    0x0000000000000000      0x11c
 .debug_frame   0x0000000000000000       0x20 counter_la.elf-isr.o
 .debug_frame   0x0000000000000020       0x20 counter_la.elf-matmul.o
 .debug_frame   0x0000000000000040       0x64 counter_la.elf-qs.o
 .debug_frame   0x00000000000000a4       0x78 counter_la.elf-counter_la.o

.debug_rnglists
                0x0000000000000000       0x5d
 .debug_rnglists
                0x0000000000000000       0x16 counter_la.elf-matmul.o
 .debug_rnglists
                0x0000000000000016       0x28 counter_la.elf-qs.o
 .debug_rnglists
                0x000000000000003e       0x1f counter_la.elf-counter_la.o
